{
  "hash": "ac678bfc129d98746120cc37155f3ecb",
  "result": {
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Aruj Nayak\"\ndate: \"2023-12-06\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n# Title: \"Navigating the Skies: Anomaly Detection in Airport Traffic\"\n# Introduction\nIn this blog, we'll shift our focus to the aviation domain and explore anomaly detection using an airport dataset. Our goal is to identify unusual patterns in the number of flights arriving at airports across different states.\n\n# The Dataset\nOur dataset consists of information about various airports, including their location, IATA codes, and colors. For the purpose of this experiment, we'll use the number of flights arriving at each airport as an indicator.\n\n# Preprocessing\nStart by cleaning and preprocessing the data. Since we're interested in anomaly detection in the context of airport traffic, we need to augment the dataset with flight information. For simplicity, let's assume you have a separate dataset containing the number of flights arriving at each airport on a daily basis.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom sklearn.datasets import load_wine\nfrom sklearn.neighbors import LocalOutlierFactor\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Load the wine dataset\nwine = load_wine()\nX = wine.data\n\n# Use Local Outlier Factor for anomaly detection\nmodel = LocalOutlierFactor(n_neighbors=20, contamination=0.05)\npredictions = model.fit_predict(X)\n\n# Visualize scatter plot for feature 2 and histogram for feature 3\nfeature2_index = 2\nfeature3_index = 3\n\nplt.figure(figsize=(12, 6))\n\n# Scatter plot for feature 2\nplt.subplot(1, 2, 1)\nplt.scatter(X[predictions == 1, feature2_index], np.zeros_like(X[predictions == 1, feature2_index]),\n            color='green', alpha=0.5, label='Normal')\nplt.scatter(X[predictions == -1, feature2_index], np.zeros_like(X[predictions == -1, feature2_index]),\n            color='red', alpha=0.5, label='Anomalies')\nplt.title(f'Scatter Plot for Feature {feature2_index}')\nplt.legend()\n\n# Histogram for feature 3\nplt.subplot(1, 2, 2)\nplt.hist(X[predictions == 1, feature3_index], bins=30, color='green', alpha=0.5, label='Normal')\nplt.hist(X[predictions == -1, feature3_index], bins=30, color='red', alpha=0.5, label='Anomalies')\nplt.title(f'Histogram for Feature {feature3_index}')\nplt.legend()\n\nplt.suptitle('LOF Anomaly Detection - Scatter Plot and Histogram', y=1.02)\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=1142 height=592}\n:::\n:::\n\n\nEnd of code\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}